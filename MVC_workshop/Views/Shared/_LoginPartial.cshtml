@using Microsoft.AspNetCore.Identity
@using MVC_workshop.Areas.Identity.Data

@inject SignInManager<MVC_workshopUser> SignInManager
@inject UserManager<MVC_workshopUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")){
    <li class="nav-item">
        <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
    </li>
        }
        @if ((User.Identity.IsAuthenticated && User.IsInRole("Student")) || (User.Identity.IsAuthenticated && User.IsInRole("Teacher")))
        {
            <li class="nav-item">
        <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/ChangePassword" title="Manage">@UserManager.GetUserName(User)</a>
    </li>
        }

    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
